// Ana Jamas, Andreza Marianno, Guilherme Fabbri, Heitor Ivaza
// CatalogoViewModel //

import Foundation
import SwiftUI

class CatalogoViewModel {
    var listaDesenhos: [[[Int]]]
    
    init(){
        listaDesenhos = [[[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,0,0,0,-1,-1,0,0,0,-1,-1,-1,-1], [-1,-1,-1,0,1,1,1,0,0,1,1,1,0,-1,-1,-1], [-1,-1,-1,0,1,1,1,1,1,1,1,1,0,-1,-1,-1], [-1,-1,-1,0,1,1,1,1,1,1,1,1,0,-1,-1,-1], [-1,-1,-1,-1,0,1,1,1,1,1,1,0,-1,-1,-1,-1], [-1,-1,-1,-1,-1,0,1,1,1,1,0,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,0,1,1,0,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]], [[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,0,0,0,0,0,0,0,0,-1,-1,-1,-1], [-1,-1,-1,0,4,4,4,4,4,4,4,4,0,-1,-1,-1], [-1,-1,-1,0,0,0,0,0,0,0,0,0,0,-1,-1,-1], [-1,-1,-1,0,3,3,3,3,3,1,1,3,0,-1,-1,-1], [-1,-1,-1,0,3,1,1,3,3,1,1,3,0,-1,-1,-1], [-1,-1,-1,-1,0,1,1,3,3,3,3,0,-1,-1,-1,-1], [-1,-1,-1,-1,0,3,3,3,3,3,3,0,-1,-1,-1,-1], [-1,-1,-1,-1,-1,0,3,1,1,3,0,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,0,3,1,1,3,0,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,0,3,3,0,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,0,3,3,0,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,0,0,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]], [[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-1], [-1,-1,-1,-1,0,5,5,0,0,5,5,0,-1,-1,-1,-1], [-1,-1,-1,-1,-1,0,5,5,5,5,0,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,0,0,0,0,0,0,-1,-1,-1,-1,-1], [-1,-1,-1,-1,0,1,1,1,1,1,1,0,-1,-1,-1,-1], [-1,-1,-1,0,1,1,1,1,1,1,1,1,0,-1,-1,-1], [-1,-1,-1,0,1,1,0,1,1,0,1,1,0,-1,-1,-1], [-1,-1,-1,0,1,1,0,1,1,0,1,1,0,-1,-1,-1], [-1,-1,-1,0,1,1,0,1,1,0,1,1,0,-1,-1,-1], [-1,-1,-1,0,1,1,0,1,1,0,1,1,0,-1,-1,-1], [-1,-1,-1,0,1,1,1,1,1,1,1,1,0,-1,-1,-1], [-1,-1,-1,-1,0,1,1,1,1,1,1,0,-1,-1,-1,-1], [-1,-1,-1,-1,-1,0,0,0,0,0,0,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]], [[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5], [5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5], [5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5], [5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5], [5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5], [5,5,5,5,5,5,3,3,3,3,5,5,5,5,5,5], [5,5,5,5,5,3,3,2,2,3,3,5,5,5,5,5], [5,5,5,5,3,3,2,2,-1,-1,3,3,5,5,5,5], [5,5,5,5,3,3,2,-1,2,2,3,3,5,5,5,5], [5,5,5,5,5,3,3,2,2,3,3,5,5,5,5,5], [5,5,5,5,5,5,3,3,3,3,5,5,5,5,5,5], [5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5], [5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5], [5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5], [5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5], [5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]], [[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],  [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1], [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]]]
    }
    func converterParaPixels(_ desenho: [[Int]]) -> [[Color]] {
        let cores: [Int: Color] = [
            -1: .white,
            0: .black,
            1: .red,
            2: .blue,
            3: .yellow,
            4: .orange,
            5: .green,
             6:.purple,
         
        ]
        
        return desenho.map { linha in
            linha.map { id in
                cores[id] ?? .white
            }
        }
    }

    
}


